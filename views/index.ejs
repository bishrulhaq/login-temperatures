<!DOCTYPE html>
<html lang="en">
<head>
    <%- include("./partials/header.ejs") %>
</head>

<body id="body">
<%- include("./partials/nav.ejs") %>

<div v-cloak id="app" class="container">
    <div class="row justify-content-md-center mt-2">
        <div class="col-sm-12">
            <div class="pricing-header px-3 py-3 pt-md-5 pb-md-5 mx-auto text-center">
                <h1 class="display-4">Hi there <b><%= user.username %></b></h1>
                <p class="lead">Check how's the weather today!</p>
                <div class="card card-block card-outline-primary">
                    <div class="card-body">
                        <div class=" float-right btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
                            <div class="btn   btn-group mr-2" role="group" aria-label="First group">
                                <button type="button" class="btn btn-secondary" v-on:click="reset">Reset</button>
                                <button type="button" class="btn btn-primary" v-on:click="filterByTemp">Hottest First
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <h3>Colombo, Sri Lanka</h3>
            <ul v-for="item in LkData" class="list-group list-group-flush">
                <li class="list-group-item"> {{item.date | dateFilter}} {{ item.temp | tempCelsius }} | {{ item.temp |
                    tempFahrenheit }}
                </li>
            </ul>
        </div>
        <div class="col-6">
            <h3>Melbourne , Australia</h3>
            <ul v-for="item in AuData" class="list-group list-group-flush">
                <li class="list-group-item"> {{item.date | dateFilter}} {{ item.temp | tempCelsius }} | {{ item.temp |
                    tempFahrenheit }}
                </li>
            </ul>
        </div>
    </div>
</div>

<%- include("./partials/footer.ejs") %>
<script>

    let app = new Vue({
        el: '#app',
        data: {
            data: [],
            LkData: [],
            AuData: []
        },
        mounted: function () {
            this.initData();
        },
        filters: {
            dateFilter(str) {
                return moment(str).format('MMMM Do YYYY, h:mm:ss a');
            },
            tempCelsius(str) {
                return Math.round(parseInt(str)) + '°C';
            },
            tempFahrenheit(str) {
                const temp = parseInt(str) * 9 / 5 + 32
                return Math.round(temp) + '°F';
            }
        },
        methods: {
            reset: function () {
                this.LkData = this.countryFilter(this.data, 'LK');
                this.AuData = this.countryFilter(this.data, 'AU');
            },
            filterByTemp: function () {
                this.LkData = this.sorting(this.LkData);
                this.AuData = this.sorting(this.AuData);
            },
            initData: function () {
                Swal.fire({
                    title: 'Please Wait!',
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading();
                    },
                });
                axios.get(`${window.location.origin}/get-weather`).then(response => {
                    this.data = response.data.data;
                    this.LkData = this.countryFilter(response.data.data, 'LK')
                    this.AuData = this.countryFilter(response.data.data, 'AU')
                    Swal.close();
                }).catch(err => {
                    Swal.close();
                })
            },
            sorting: function (data) {
                Swal.fire({
                    title: 'Please Wait!',
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading();
                    },
                });
                data.sort((a, b) => b.temp - a.temp);
                Swal.close();
                return data
            },
            countryFilter: function (data, country) {
                Swal.fire({
                    title: 'Please Wait!',
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading();
                    },
                });
                const filteredData = [];
                data.forEach(element => {
                    if (element.country === country) filteredData.push(element)
                });
                Swal.close();
                return filteredData;
            }
        }
    })
</script>
</body>
</html>